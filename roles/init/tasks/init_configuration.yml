---
- block:

  - name: list configurations
    command: gcloud config configurations list
    register: configurations

  - set_fact:
      configuration_names: []

  - set_fact:
      configuration_names: "{{ configuration_names }} + [ '{{ item.split(' ')[0] }}' ]"
    loop: "{{ configurations.stdout_lines }}"
    when: not item.startswith('NAME')

  - debug: var=configuration_names
    when: configuration_name is not defined
  
  - pause:
      prompt: "existing or new configuration name"
    when: configuration_name is not defined
    register: configuration_name_prompt

  - set_fact:
      configuration_name: "{{ configuration_name_prompt.user_input }}"
    when: configuration_name is not defined

  - command: gcloud config configurations create {{ configuration_name }}
    when: configuration_name not in configuration_names

  - command: gcloud config configurations activate {{ configuration_name }}
    when: configuration_name in configuration_names

  - name: describe configuration
    command: gcloud config configurations describe {{ configuration_name }} --all
    register: command_result

  - set_fact:
      configuration: "{{ command_result.stdout | from_yaml }}"

  - set_fact: 
      project_id: "{{ configuration.properties.core.project | default(omit, true) }}"
      account_id: "{{ configuration.properties.core.account | default(omit, true) }}"

  - fail:
      msg: > 
        Please run 'gcloud auth login' to obtain new credentials,
        or if you have already logged in with a different account
        'gcloud config set account ACCOUNT'.
        Then re-run the playbook with 'init' tag.
    when: account_id is not defined

  tags: init