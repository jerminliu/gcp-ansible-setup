---
- name: list configurations
  command: gcloud config configurations list
  register: configurations

- name: check existing configuration for project
  set_fact:
    configuration_line: "{{ item }}"
  loop: "{{ configurations.stdout_lines }}"
  when: item.split(' ')[0] == project_id

- debug: var=configuration_line

- command: gcloud config configurations create {{ project_id }}
  when: configuration_line is not defined

- command: gcloud config configurations activate {{ project_id }}
  when: configuration_line is defined

- name: describe configuration
  command: gcloud config configurations describe {{ project_id }}
  register: command_result

- set_fact:
    configuration: "{{ command_result.stdout | from_yaml }}"

- debug: var=configuration

- command: gcloud config set project {{ project_id }}
  when: > 
    configuration.properties.core is not defined or
    configuration.properties.core.project is not defined

- fail:
    msg: "Configuration '{{ project_id }}' exists, but initialized project ID doesn't match."
  when: 
    - configuration.properties.core is defined
    - configuration.properties.core.project != "{{ project_id }}"

- fail:
    msg: "Please run 'gcloud auth login' and then re-run the playbook."
  when: configuration.properties.core.account is not defined

- command: gcloud config set project {{ project_id }}
  when: 
    - configuration.properties.core.project is not defined