---
- set_fact:
    service_account_name: "{{ project_id }}-sa"
  tags: always

- set_fact:
    service_account: "{{ service_account_name }}@{{ project_id }}.iam.gserviceaccount.com"
  tags: always

- name: check service account exists
  command: >
    gcloud iam service-accounts describe {{ service_account }}
  register: describe_result
  tags: always

- name: create service account
  command: >
    gcloud iam service-accounts create {{ service_account_name }} \
    --display-name={{ service_account_name }}
  when: describe_result.rc > 0
  tags: always

- name: grant roles
  command: >
    gcloud projects add-iam-policy-binding {{ project_id }} \
    --member serviceAccount:{{ service_account }} \
    --role=roles/{{ item }}
  loop:
    - editor
  tags: always

- name: check service account key exists
  set_fact:
    credentials: "{{ lookup('file', service_account_key_path) | from_json }}"
  ignore_errors: True
  tags: always

- set_fact:
    create_key: True
  when: credentials is not defined
  tags: always

- set_fact:
    create_key: False
  when:
    - credentials is defined
    - credentials.client_email == service_account
  tags: always

- name: create service account key
  command: >
    gcloud iam service-accounts keys create {{ service_account_key_path }} \
    --iam-account {{ service_account }}
  when: create_key
  tags: always
